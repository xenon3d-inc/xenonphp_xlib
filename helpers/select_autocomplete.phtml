<!-- BEGIN select_autocomplete_list -->
<style>
    div.autocomplete_list > input[type="text"] {
        
    }
    div.autocomplete_list ul {
        position: absolute;
        list-style: none;
        width: auto;
        min-width: inherit;
        min-height: 20px;
        box-shadow: 0px 10px 20px 10px #555;
        background-color: #ccc;
        z-index: 10000;
    }
    div.autocomplete_list ul:empty:after {
        content: ' --- ';
        color: #888;
        line-height: 20px;
        text-align: left;
        padding: 3px 10px;
    }
    div.autocomplete_list ul li {
        background-color: #ccc;
        color: #000;
        width: 100%;
        display: block;
        padding: 3px 10px;
        text-align: left;
        cursor: pointer;
        white-space: nowrap;
    }
    div.autocomplete_list ul li:empty:after {
        content: ' [NULL] ';
        color: #888;
        line-height: 20px;
    }
    div.autocomplete_list ul li.loading {
        color: #888;
        line-height: 20px;
        text-align: center;
    }
    div.autocomplete_list ul li.loading > i.fa-spinner {
        animation: spin 1000ms linear infinite;
        text-align: center;
    }
    div.autocomplete_list ul li.active {
        background-color: #48f;
        color: #fff;
    }
    div.autocomplete_list ul li:hover {
        background-color: #05c;
        color: #fff;
    }
</style>
<script>
    var X_select_autocomplete_timeout = null;
    var X_select_autocomplete_jqxhr = null;
    $(document)
        .off('focus.autocompletion_activation', 'select[autocomplete_list]:not(.autocompletion_activated), select[autocomplete_ajax]:not(.autocompletion_activated)')
        .on('focus.autocompletion_activation', 'select[autocomplete_list]:not(.autocompletion_activated), select[autocomplete_ajax]:not(.autocompletion_activated)', function(event){
            var $select = $(this);
            var options = {};
            $select.find('option').each(function(){
                options[$(this).attr('value')] = $(this).text();
            });
            var selectedOptionValue = $select.val() || '';
            var selectionOptionLabel = options[selectedOptionValue] || selectedOptionValue;
            var $div = $('<div class="autocomplete_list">').insertAfter($select);
            var $ul = $('<ul>').appendTo($div);
            var $input = $('<input type="text">').prependTo($div).val(selectionOptionLabel).focus().select();

            $div.css({
                position: $select.css('position'),
                left: $select.css('left'),
                top: $select.css('top'),
                right: $select.css('right'),
                bottom: $select.css('bottom'),
                float: $select.css('float'),
                display: $select.css('display'),
                width: $select.css('width'),
                'min-width': $select.css('width'),
                height: $select.css('height'),
                margin: 0,
                padding: 0,
                border: 'none',
            });
            $input.css({
                width: '100%',
                height: '100%',
                margin: $select.css('margin'),
                padding: $select.css('padding'),
                border: $select.css('border'),
                color: $select.css('color'),
                'font-size': $select.css('font-size'),
                'background-color': $select.css('background-color'),
            });

            $select.addClass('autocompletion_activated').hide();

            var $currentAutocompleteOption = null;
            var removeAutocompleteList = function(){
                $select.removeClass('autocompletion_activated').show();
                $div.remove();
            }
            var selectOption = function(){
                if ($currentAutocompleteOption) {
                    if ($select.is('[autocomplete_ajax]')) {
                        $select.empty().append($('<option>').attr('value', $currentAutocompleteOption.attr('value')).text($currentAutocompleteOption.text()));
                    }
                    $select.val($currentAutocompleteOption.attr('value'));
                    removeAutocompleteList();
                    $select.trigger('change');
                }
            };
            var appendOption = function(val, text) {
                var $li = $('<li>').attr('value', val).text(text);
                if (!$currentAutocompleteOption) {
                    $currentAutocompleteOption = $li;
                    $currentAutocompleteOption.addClass('active');
                }
                $li.on('mousedown', function(e){
                    e.preventDefault();
                    e.stopPropagation();
                    $currentAutocompleteOption = $(this);
                    $currentAutocompleteOption.addClass('active');
                    selectOption();
                });
                $ul.append($li);
            };
            var refreshOptions = function(){
                $ul.empty();
                $currentAutocompleteOption = null;
                if ($select.is('[autocomplete_ajax]')) {
                    var search = $input.val().trim();
                    $ul.empty().append($('<li class="loading">').append('<i class="fas fa-spinner">'));
                    if (X_select_autocomplete_jqxhr) X_select_autocomplete_jqxhr.abort();
                    if (X_select_autocomplete_timeout) clearTimeout(X_select_autocomplete_timeout);
                    X_select_autocomplete_timeout = setTimeout(function(){
                        var url = $select.attr('autocomplete_ajax');
                        if (url.substr(0, 11) == 'javascript:') {
                            url = eval(url.substr(11));
                        }
                        X_select_autocomplete_jqxhr = $.get(url, {
                            'search': search,
                        }, function(data){
                            X_select_autocomplete_jqxhr = null;
                            $ul.empty();
                            for (var val in data) {
                                appendOption(val, data[val]);
                            }
                        }, 'json');
                    }, $select.attr('autocomplete_ajax_delay') || 300);
                } else {
                    var search = $input.val().trim().toLowerCase().replace(/\W+/g, ' ');
                    for (var val in options) {
                        var text = options[val];
                        if (text.trim().toLowerCase().replace(/\W+/g, ' ').indexOf(search) >= 0) {
                            appendOption(val, text);
                        }
                    }
                }
            };
            $input
                .on('blur', function(e){
                    removeAutocompleteList();
                })
                .on('keydown', function(e){
                    if (e.keyCode == 9) { // TAB 
                        selectOption();
                    } else if (e.keyCode == 13) { // ENTER
                        e.preventDefault();
                    } else if (e.keyCode == 38 || e.keyCode == 39) { // UP / DOWN
                        e.preventDefault();
                    }
                })
                .on('keyup', function(e){
                    e.stopPropagation();
                    if (e.keyCode == 38) { // UP
                        if ($currentAutocompleteOption) {
                            var $previous = $currentAutocompleteOption.prev();
                            if ($previous.length) {
                                $currentAutocompleteOption.removeClass('active');
                                $currentAutocompleteOption = $previous;
                                $currentAutocompleteOption.addClass('active');
                            }
                        }
                    } else if (e.keyCode == 40) { // DOWN
                        if ($currentAutocompleteOption) {
                            var $next = $currentAutocompleteOption.next();
                            if ($next.length) {
                                $currentAutocompleteOption.removeClass('active');
                                $currentAutocompleteOption = $next;
                                $currentAutocompleteOption.addClass('active');
                            }
                        }
                    } else if (e.keyCode == 13) { // ENTER
                        selectOption();
                    } else if (e.keyCode == 9) { // TAB
                        // do nothing
                    } else if (e.keyCode == 27) { // ESCAPE
                        removeAutocompleteList();
                    } else {
                        refreshOptions();
                    }
                })
            ;
            refreshOptions();
        });
</script>
<!-- END select_autocomplete_list -->
